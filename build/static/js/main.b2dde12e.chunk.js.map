{"version":3,"sources":["images/logo.svg","components/Header.js","utils/api.js","contexts/userContext.js","components/Card.js","components/Main.js","components/ImagePopup.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","index.js"],"names":["Header","className","src","logo","alt","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","then","_getResponseData","newPhotoName","newPhotoURL","method","body","JSON","stringify","name","link","id","avatarURL","avatar","data","newUsername","newBio","about","all","getInitialCards","getUserData","authorization","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDislike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","aria-label","length","Main","onEditProfile","onAddPlace","onEditAvatar","cardArray","type","map","ImagePopup","onClose","Footer","PopupWithForm","props","isOpen","noValidate","onSubmit","title","children","button","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","value","onChange","target","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","avatarUrlInput","useRef","current","ref","placeholder","AddPlacePopup","locationNameInput","photoUrlInput","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","cards","setCards","setCurrentUser","closeAllPopups","user","catch","err","console","log","Provider","likeCard","newCard","state","c","dislikeCard","deleteCard","filter","updateUserData","addNewCard","updateAvatarPhoto","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2dde12e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n        <header className=\"header root__section-position\">\n            <img src={logo} alt=\"Лого проекта Mesto Russia\" className=\"header__logo\" />\n        </header>\n  );\n}\n\nexport default Header;","class Api {\n    constructor({url, headers}) {\n      this._url = url;\n      this._headers = headers;\n    }\n  \n    _getResponseData(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка: ${res.status}`); \n        }\n        return res.json();\n      }\n    \n    getInitialCards() {\n        return fetch(`${this._url}cards`, {\n          headers: this._headers,\n        })\n          .then (this._getResponseData);\n      }\n  \n    addNewCard(newPhotoName, newPhotoURL) {\n        return fetch(`${this._url}cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify({name: newPhotoName, link: newPhotoURL}),\n          })\n          .then (this._getResponseData);\n      }\n\n    deleteCard(id) {\n        return fetch (`${this._url}cards/${id}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n            })\n            .then (this._getResponseData);\n        }  \n        \n    likeCard(id) {\n        return fetch (`${this._url}cards/likes/${id}`, {\n            method: \"PUT\",\n            headers: this._headers,\n            })\n            .then (this._getResponseData);\n        }\n\n    dislikeCard(id) {\n        return fetch (`${this._url}cards/likes/${id}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n            })\n            .then (this._getResponseData);\n        }\n    \n    updateAvatarPhoto (avatarURL) {\n        return fetch (`${this._url}users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({avatar: avatarURL})\n            })\n            .then (this._getResponseData);\n\n        }\n\n    getUserData (data) {\n        return fetch (`${this._url}users/me/`, {\n            method: \"GET\",\n            headers: this._headers,\n            })\n            .then (this._getResponseData);\n        }\n\n    updateUserData (newUsername, newBio) {\n        return fetch (`${this._url}users/me/`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({name: newUsername, about: newBio})\n            })\n            .then (this._getResponseData);\n        }\n\n    getDataForPageRender() {\n        return Promise.all([this.getInitialCards(), this.getUserData()])\n    }\n\n    getCardInfo (id) {\n        return fetch (`${this._url}cards/likes/${id}`, {\n            method: \"GET\",\n            headers: this._headers,\n            })\n            .then (this._getResponseData);\n        }\n    }\n\n    //Создаю экземляр класса Api \n    const api = new Api ({\n        url: 'https://mesto.nomoreparties.co/v1/cohort-23/',\n        headers: {\n            authorization: 'a260d49c-522b-4bbd-9cd1-72740d17aa2a', \n            'Content-type': 'application/json',\n        }\n    })\n\n    export default api ","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/userContext';\n\nfunction Card({card, onCardClick, onCardLike, onCardDislike, onCardDelete}) {\n    \n    const currentUser = React.useContext(CurrentUserContext);\n\n    //Переменная, является ли текущий пользователь автором карточки\n    const isOwn = card.owner._id === currentUser._id;\n    \n    //Класс для кнопки удаления карточки (Показываем кнопку удаления, если текущий пользователь, является автором карточки)\n    const cardDeleteButtonClassName =\n        `element__delete-button ${isOwn ? 'element__delete-button_visible' : ''}`;\n    \n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Класс для кнопки лайка\n    const cardLikeButtonClassName = (\n        `element__like-button ${isLiked ? 'element__like-button_active' : ''}`\n    ); \n\n    const handleCardClick = () => {\n        onCardClick(card)\n      };\n    \n    const handleLikeClick = () => {\n        if (!isLiked) {onCardLike(card)} \n            else if (isLiked) {onCardDislike(card)}\n      };\n\n      const handleCardDelete = () => {\n        onCardDelete(card)\n      };\n    \n    return (\n        <li className=\"element\">\n            <img className=\"element__photo\" alt={card.name} src={card.link} onClick={handleCardClick}/>\n            <button className={cardDeleteButtonClassName} aria-label=\"Удалить фотографию\" onClick={handleCardDelete}></button>\n            <div className=\"element__info\">\n                <h2 className=\"element__title\">{card.name}</h2>\n                <div className=\"element__like-counter\">\n                    <button className={cardLikeButtonClassName} aria-label=\"Отметить фотографию как понравившуюся\" onClick={handleLikeClick}></button>\n                    <p className=\"element__like-number\">{card.likes.length}</p>\n                </div>\n            </div>\n        </li>\n    );\n  }\n  \n  export default Card;","import React from 'react';\n// import api from '../utils/api'; \nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/userContext';\n\n\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, onCardLike, onCardDislike, onCardDelete, cardArray}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n        <main className=\"content root__section-position\">\n            <div className=\"profile\">\n                <div className=\"profile__all-user-info\">\n                    <div className=\"profile__avatar\">\n                        <img src={currentUser.avatar} alt=\"Фотография профиля\" className=\"profile__avatar-image\" />\n                        <div className=\"profile__avatar-edit-button\" \n                            onClick={onEditAvatar}>\n                        </div>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__username-editing\">\n                            <h1 className=\"profile__username\">{currentUser.name}</h1>\n                            <button type=\"button\" id=\"edit-profile\" className=\"profile__edit-button\" aria-label=\"Редактировать профиль\" onClick={onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__bio\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"profile__add-button\" id=\"add-element\" aria-label=\"Добавить место\" onClick={onAddPlace}></button>\n            </div>\n            <ul className=\"elements\">\n                {\n                    cardArray.map((card) => \n                    (<Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike} onCardDislike={onCardDislike} onCardDelete={onCardDelete} />)\n                    )\n                }\n            </ul>\n        </main>\n  );\n}\n\nexport default Main;","import React from 'react';\n\nfunction ImagePopup({card, onClose}) {\n    return (\n        <div className={`popup popup_use_view-full-photo ${card && 'popup_is-opened'}`}>\n            <div className=\"popup__full-photo-container\">\n                <img className=\"popup__full-photo\" src={card?.link} alt={card?.name} />\n                <p className=\"popup__full-photo-title\">{card?.name}</p>\n                <button type=\"button\" className=\"close-icon\" aria-label=\"Закрыть\" onClick={onClose}></button>\n            </div>\n        </div>\n    );\n  }\n  \n  export default ImagePopup;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer root__section-position\">\n            <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\n        </footer>\n    );\n  }\n  \n  export default Footer;","import React from 'react';\n\nexport default function PopupWithForm(props) {\n\n    return (\n        <div className={`popup popup_use_${props.name} ${props.isOpen ? 'popup_is-opened': ''}`}>\n        <div className=\"popup__content\">\n            <form className=\"form\" name={`${props.name}`} noValidate onSubmit={props.onSubmit}>\n                <h2 className=\"form__title\">{`${props.title}`}</h2>\n                <fieldset className=\"form__container\">\n                {props.children}\n                <button type=\"submit\" className=\"form__submit-button\" id={`submit-${props.name}`}>{props.button}</button>\n                </fieldset>\n            </form>\n            <button type=\"button\" className=\"close-icon\" aria-label=\"Закрыть\"\n            onClick={props.onClose}></button>\n        </div>\n    </div>\n    );\n  }","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/userContext';\n\nexport default function EditProfilePopup ({isOpen, onClose, onUpdateUser}) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [name, setName] = React.useState([currentUser.name]);\n    const [description, setDescription] = React.useState([currentUser.about]);\n\n    React.useEffect(() => {\n        setName(currentUser.name || '');\n        setDescription(currentUser.about || '');\n      }, [currentUser]); \n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        \n        e.preventDefault();\n    \n        onUpdateUser({\n          name,\n          about: description,\n        });\n      }\n\n    return (\n        <PopupWithForm \n                  title='Редактировать профиль'\n                  name='edit-profile'\n                  button='Сохранить'\n                  isOpen={isOpen}\n                  onClose={onClose}\n                  onSubmit={handleSubmit}\n        >\n                    <input className=\"form__input\" type=\"text\" value={name} onChange={handleChangeName} name=\"username\" id=\"username\" minLength=\"2\" maxLength=\"40\" required />\n                    <span className=\"form__input-error-message username-error\"></span>\n                    <input className=\"form__input\" type=\"text\" value={description} onChange={handleChangeDescription} name=\"bio\" id=\"bio\" minLength=\"2\" maxLength=\"200\" required />\n                    <span className=\"form__input-error-message bio-error\"></span>\n    </PopupWithForm>\n    )\n}","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nexport default function EditAvatarPopup ({isOpen, onClose, onUpdateAvatar}) {\n\n    const avatarUrlInput = React.useRef();\n\n    function handleSubmit(e) {\n\n        e.preventDefault();\n        onUpdateAvatar({\n          avatar: avatarUrlInput.current.value,\n        });\n      }\n    return (\n        <PopupWithForm \n            title='Обновить аватар'\n            name='update-avatar-image'\n            button='Сохранить' \n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            >\n                <input className=\"form__input\" ref={avatarUrlInput} type=\"url\" name=\"link\" id=\"avatar-image-url\" placeholder=\"Ссылка на фотографию\" required />\n                <span className=\"form__input-error-message avatar-image-url-error\"></span>  \n        </PopupWithForm>\n    )\n}","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nexport default function AddPlacePopup ({isOpen, onClose, onAddPlace}) {\n\n    const locationNameInput = React.useRef();\n    const photoUrlInput = React.useRef();\n\n    function handleSubmit(e) {\n\n        e.preventDefault();\n        onAddPlace({\n          name: locationNameInput.current.value,\n          link: photoUrlInput.current.value,\n        });\n      }\n\n    return (\n        <PopupWithForm\n                title='Новое место'\n                name='add-photo'\n                button='Создать'\n                isOpen={isOpen}\n                onClose={onClose}\n                onSubmit={handleSubmit}\n                >\n                        <input className=\"form__input\" ref={locationNameInput} type=\"text\" name=\"name\" id=\"location-name\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required />\n                        <span className=\"form__input-error-message location-name-error\"></span>\n                        <input className=\"form__input\" ref={photoUrlInput} type=\"url\" name=\"link\" id=\"photo-url\" placeholder=\"Ссылка на картинку\" required />\n                        <span className=\"form__input-error-message photo-url-error\"></span>\n        </PopupWithForm>\n    )\n}","import React from 'react';\nimport Header from './Header'\nimport api from '../utils/api'; \nimport Main from './Main'\nimport ImagePopup from './ImagePopup'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from '../contexts/userContext';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({CurrentUserContext});\n\n  React.useEffect (() => {\n    api.getUserData().then((user) => (\n      setCurrentUser(user)\n        ))\n        .catch((err) => {\n            console.log(err)\n        })\n    }, []);\n\n    React.useEffect (() => {\n      api.getInitialCards().then((data) => setCards(data))\n              .catch((err) => {\n                  console.log(err)\n              })\n      }, []);\n  \n  function handleEditProfileClick () {\n    setIsEditProfilePopupOpen(true)\n  }\n  \n  function handleAddPlaceClick () {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick () {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setSelectedCard(null)\n  }\n\n  function handleCardLike(card) {\n    //Проверка, есть ли у карточки лайк\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.likeCard(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c))\n        }).catch((err) => {\n          console.log(err)\n          });\n  }\n\n  function handleCardDislike(card) {\n    //Проверка, есть ли у карточки лайк\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.dislikeCard(card._id, isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c))\n        }).catch((err) => {\n          console.log(err)\n          });\n  }\n\n  function handleCardDelete(card) {\n   \n    // Отправляем запрос в API на удаление карточки\n      api.deleteCard(card._id).then(() => {\n        setCards((state) => state.filter((c) => c._id !== card._id))\n          }).catch((err) => {\n            console.log(err)\n            });\n  }\n\n  function handleUpdateUser({name, about}) {\n\n      api.updateUserData(name, about).then((res) => {\n        setCurrentUser(user => ({...user, name, about }))\n          }).then(() => setIsEditProfilePopupOpen(false)\n            ).catch((err) => {\n              console.log(err)\n              });\n  }\n\n  function handleUpdateAvatar({avatar}) {\n    \n    api.updateAvatarPhoto(avatar).then((res) => {\n      setCurrentUser(user => ({...user, avatar}))\n        }).then(() => setIsEditAvatarPopupOpen(false)\n          ).catch((err) => {\n            console.log(err)\n            });\n  }\n\n  function handleAddPlaceSubmit ({name, link}) {\n    \n    api.addNewCard(name, link).then((newCard) => {\n      setCards([newCard, ...cards])\n        }).then(() => setIsAddPlacePopupOpen(false)\n          ).catch((err) => {\n            console.log(err)\n            });\n\n  }\n\n  return (\n\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n          <Header />\n          <Main\n\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onCardClick={setSelectedCard}\n            onCardLike={handleCardLike}\n            onCardDislike={handleCardDislike}\n            onCardDelete={handleCardDelete}\n            cardArray={cards}\n          />\n\n          <EditProfilePopup \n            isOpen={isEditProfilePopupOpen} \n            onClose={closeAllPopups} \n            onUpdateUser={handleUpdateUser}\n          />\n                  \n            <AddPlacePopup \n              isOpen={isAddPlacePopupOpen} \n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n            />\n\n            <EditAvatarPopup \n              isOpen={isEditAvatarPopupOpen} \n              onClose={closeAllPopups} \n              onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <ImagePopup \n                card={selectedCard}\n                onClose={closeAllPopups}\n                />\n          <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}